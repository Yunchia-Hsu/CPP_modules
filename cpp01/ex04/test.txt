hello there
hello world
hapy cding life is in helsinki
yunchiachia

hhshshsuu hia
replace some more stuff!




FileReplacer::FileReplacer(const std::string& filename, const std::string& s1, const std::string& s2)
	: filename(filename), s1(s1), s2(s2) {}

std::string	FileReplacer::readFile()
{
	std::ifstream	inFile(filename);//std::ifstream?
	if (!inFile)
	{
		std::cout << "Unable to open the file " << filename << std::endl;
		return ("");
	}
	std::stringstream	buffer;//讀取整個檔案的內容 //std::stringstream?
	buffer << inFile.rdbuf();//?
	return (buffer.str());
}

int	FileReplacer::writeFile(const std::string& content)//將新的內容寫入到一個以原檔案名稱加上 .replace 結尾的檔案中
{
	std::ofstream	outFile(filename + ".replace");
	if (!outFile)
	{
		std::cout << "Unable to create the file " << filename + ".replace" << std::endl;
		return (1);
	}
	outFile << content;//?
	return (0);
}

int	FileReplacer::replace()//負責進行字串替換，將檔案中所有出現的 s1 替換為 s2，並將結果寫入新的檔案。
{
	std::string	content = readFile();
	if (content.empty())
	{
		std::cout << "Failed to read the file or file is empty" << std::endl;
		return (1);
	}
	std::string	newContent;
	size_t		pos = 0;// why size_t?
	while (true)
	{
		size_t	foundPos = content.find(s1, pos);
		if (foundPos == std::string::npos)
			break ;
		newContent.append(content, pos, foundPos - pos);
		newContent += s2;
		pos = foundPos + s1.length();
	}
	newContent.append(content, pos, std::string::npos);
	if (writeFile(newContent))
		return (1);
	return (0);
}